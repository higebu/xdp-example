// Code generated by bpf2go; DO NOT EDIT.

package main

import (
	"bytes"
	_ "embed"
	"fmt"
	"io"

	"github.com/cilium/ebpf"
)

// LoadExample returns the embedded CollectionSpec for Example.
func LoadExample() (*ebpf.CollectionSpec, error) {
	reader := bytes.NewReader(_ExampleBytes)
	spec, err := ebpf.LoadCollectionSpecFromReader(reader)
	if err != nil {
		return nil, fmt.Errorf("can't load Example: %w", err)
	}

	return spec, err
}

// LoadExampleObjects loads Example and converts it into a struct.
//
// The following types are suitable as obj argument:
//
//     *ExampleObjects
//     *ExamplePrograms
//     *ExampleMaps
//
// See ebpf.CollectionSpec.LoadAndAssign documentation for details.
func LoadExampleObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	spec, err := LoadExample()
	if err != nil {
		return err
	}

	return spec.LoadAndAssign(obj, opts)
}

// ExampleSpecs contains maps and programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type ExampleSpecs struct {
	ExampleProgramSpecs
	ExampleMapSpecs
}

// ExampleSpecs contains programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type ExampleProgramSpecs struct {
	XdpProg *ebpf.ProgramSpec `ebpf:"xdp_prog"`
}

// ExampleMapSpecs contains maps before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type ExampleMapSpecs struct {
}

// ExampleObjects contains all objects after they have been loaded into the kernel.
//
// It can be passed to LoadExampleObjects or ebpf.CollectionSpec.LoadAndAssign.
type ExampleObjects struct {
	ExamplePrograms
	ExampleMaps
}

func (o *ExampleObjects) Close() error {
	return _ExampleClose(
		&o.ExamplePrograms,
		&o.ExampleMaps,
	)
}

// ExampleMaps contains all maps after they have been loaded into the kernel.
//
// It can be passed to LoadExampleObjects or ebpf.CollectionSpec.LoadAndAssign.
type ExampleMaps struct {
}

func (m *ExampleMaps) Close() error {
	return _ExampleClose()
}

// ExamplePrograms contains all programs after they have been loaded into the kernel.
//
// It can be passed to LoadExampleObjects or ebpf.CollectionSpec.LoadAndAssign.
type ExamplePrograms struct {
	XdpProg *ebpf.Program `ebpf:"xdp_prog"`
}

func (p *ExamplePrograms) Close() error {
	return _ExampleClose(
		p.XdpProg,
	)
}

func _ExampleClose(closers ...io.Closer) error {
	for _, closer := range closers {
		if err := closer.Close(); err != nil {
			return err
		}
	}
	return nil
}

// Do not access this directly.
//go:embed example_bpf.o
var _ExampleBytes []byte
